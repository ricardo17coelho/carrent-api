// <auto-generated />
using System;
using Carrent.Common.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Carrent.Migrations
{
    [DbContext(typeof(CarRentDbContext))]
    partial class CarRentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Carrent.CarManagement.Domain.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Carrent.CarManagement.Domain.CarClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarClasses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f7621bf-3bc6-4d97-9919-1bf079843417"),
                            PricePerDay = 7m,
                            Type = "Classic"
                        },
                        new
                        {
                            Id = new Guid("cbbf98b8-b9be-4e79-a2f7-179fe4a4e5e1"),
                            PricePerDay = 12m,
                            Type = "Basic"
                        },
                        new
                        {
                            Id = new Guid("eed4642f-23fa-4972-b867-e699ad44369f"),
                            PricePerDay = 12m,
                            Type = "Medium"
                        },
                        new
                        {
                            Id = new Guid("88fb2a51-427e-4447-b93e-357cb304ba68"),
                            PricePerDay = 12m,
                            Type = "Luxury"
                        });
                });

            modelBuilder.Entity("Carrent.CarManagement.Domain.Car", b =>
                {
                    b.HasOne("Carrent.CarManagement.Domain.CarClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });
#pragma warning restore 612, 618
        }
    }
}
